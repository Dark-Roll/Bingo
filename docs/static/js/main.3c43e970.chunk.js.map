{"version":3,"sources":["components/WinPopUp.js","components/BingoBlock.js","reducers/resultReducer.js","sagas/resultSaga.js","constants/actionTypes.js","store.js","actions/resultAction.js","components/App.js","serviceWorker.js","index.js"],"names":["WinPopUp","props","className","result","win","lose","onClick","handleRestartClick","BingoBlock","grid","handleNumberClick","circle","map","sameXArr","i","key","style","zoom","e","parseInt","value","initialState","message","watchRecordResult","recordResult","resultSaga","takeEvery","action","put","type","data","payload","error","all","sagaMiddleware","createSagaMiddleware","store","createStore","state","applyMiddleware","run","rootSaga","boundRecordResult","bindActionCreators","dispatch","App","useState","setGrid","setCircle","isWin","setIsWin","searchValue","setSearchValue","length","setLength","isEasterEggShow","setIsEasterEggShow","lengthPow","setLengthPow","useSelector","useEffect","initializeCircle","initializeGrid","filter","computeLine","arr","index","intArr","randomArr","createRandomArray","gridArr","nthRow","push","resultArr","randomNum","Math","floor","random","splice","rowLine","columnLine","slashLine","x","console","log","y","includesZero","showWin","setCircleIndexTrue","newArr","slice","fontSize","textAlign","color","onChange","target","placeholder","alert","marginTop","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.3c43e970.chunk.js","sourcesContent":["import React from \"react\";\n\nfunction WinPopUp(props) {\n\n    return (\n        <div className=\"victory__container\">\n            <div className=\"victory__main\">\n                <p className=\"victory__title\"> You win </p>\n                <p> Win: {props.result && props.result.win} </p>\n                <p> Lose: {props.result && props.result.lose} </p> \n                \n                <button onClick={props.handleRestartClick}>Restart</button>\n                \n            </div>\n        </div>\n    )\n}\n\nexport default WinPopUp","import React from \"react\";\n\nfunction BingoBlock(props) {\n\n    let grid = props.grid\n    let handleNumberClick = props.handleNumberClick\n    let circle = props.circle\n\n    return (\n        <>\n            {\n                grid.map( (sameXArr, i) => <div key={i} style={{zoom: 2}}>\n                    {\n                        sameXArr.map((e, i) => <button\n                            className={circle[parseInt(e) - 1] === 1 ? 'circled bingoblock' : 'bingoblock'}\n                            value={e}\n                            onClick={handleNumberClick}\n                            key={i}\n                        >\n                            {e}\n                        </button>)\n                    }\n                </div>)\n            }\n        </>\n    )\n}\n\nexport default BingoBlock","const initialState = {\n    result:{win: 0, lose:0},\n    message: '',\n};\n\nexport default function resultReducer(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase 'RECORD_RESULT_SUCCESS': {\n\t\t\treturn {\n                ...state,\n\t\t\t\tresult: action.data\n            }\n\t\t}\n\t\tcase 'RECORD_RESULT_ERROR':{\n\t\t\treturn {\n                ...state,\n\t\t\t\terror: action.error\n\t\t\t}\n\t\t}\n\t\tdefault:\n\t\t\treturn state\n\t}\n}","import {\n    put,\n    takeEvery,\n    all\n} from 'redux-saga/effects'\n\nimport { \n    RECORD_RESULT,\n    RECORD_RESULT_SUCCESS,\n    RECORD_RESULT_ERROR,\n} from '../constants/actionTypes';\n\nfunction* watchRecordResult() {\n    yield takeEvery(RECORD_RESULT, recordResult)\n}\n\nfunction* recordResult(action) {\n    try {\n\n        yield put({ type: RECORD_RESULT_SUCCESS, data: action.payload})\n\n    } catch (error) {\n        yield put({ type: RECORD_RESULT_ERROR, error })\n    }\n}\n\n\nexport default function* resultSaga() {\n    yield all([\n        watchRecordResult()\n    ])\n}","export const RECORD_RESULT = \"RECORD_RESULT\"\nexport const RECORD_RESULT_SUCCESS = \"RECORD_RESULT_SUCCESS\"\nexport const RECORD_RESULT_ERROR = \"RECORD_RESULT_ERROR\"","import {\n    createStore,\n    applyMiddleware\n} from 'redux'\n\nimport createSagaMiddleware from 'redux-saga'\n\nimport rootReducer from './reducers/resultReducer'\nimport rootSaga from './sagas/resultSaga'\n\nconst sagaMiddleware = createSagaMiddleware()\n\nconst store = createStore(\n    rootReducer,\n    applyMiddleware(sagaMiddleware)\n)\n\nsagaMiddleware.run(rootSaga)\n\nexport default store","import { bindActionCreators } from 'redux';\nimport store from '../store';\n\nimport {\n    RECORD_RESULT,\n} from '../constants/actionTypes';\n\nconst recordResult = payload => {\n    return{\n        type: RECORD_RESULT,\n        payload\n    }\n}\n\nexport const boundRecordResult = bindActionCreators(recordResult, store.dispatch)\n\n","import React, { useState, useEffect } from \"react\";\nimport WinPopUp from './WinPopUp';\nimport BingoBlock from './BingoBlock';\nimport './App.css';\nimport { boundRecordResult } from '../actions/resultAction';\nimport { useSelector } from 'react-redux';\n\n\nfunction App() {\n\tconst [grid, setGrid] = useState([[]])\n\tconst [circle, setCircle] = useState([])\n\tconst [isWin, setIsWin] = useState(false)\n\tconst [searchValue, setSearchValue] = useState(0)\n\tconst [length, setLength] = useState(4)\n\tconst [isEasterEggShow, setIsEasterEggShow ] = useState(false)\n\tconst [lengthPow, setLengthPow ] = useState(length*length)\n\n\tconst result = useSelector(state => state.result);\n\n\t// intialize\n\tuseEffect(()=>{\n\t\tinitializeCircle()\n\t\tinitializeGrid()\n\t}, [])\n\n\t// compute if user win\n\tuseEffect(()=>{\t\t\n\t\tlet circledArr = circle && circle.filter(e=> e === 1)\n\n\t\t// there is no 3 lines when circled is less than 9 \n\t\tif( circledArr.length >= 9 ){\n\t\t\tcomputeLine()\n\t\t}\n\t}, [circle])\n\n\t// change grid size\n\tuseEffect(()=>{\n\t\tinitializeGrid()\n\t\tinitializeCircle()\n\t}, [lengthPow])\n\n\tconst howManyLineIsWin = 3\n\n\tconst initializeCircle = ()=>{\n\t\tlet arr = []\n\t\tfor (let index = 0; index < lengthPow; index++) {\n\t\t\tarr[index] = 0\n\t\t}\n\t\tsetCircle(arr)\n\t}\n\n\tconst initializeGrid = ()=>{\n\t\tlet intArr =[]\n\t\tlet resultArr = []\n\t\tfor (let index = 0; index < lengthPow; index++) {\n\t\t\tintArr[index] = index +1\n\t\t}\n\n\t\tlet randomArr = createRandomArray(intArr, resultArr)\n\n\t\tlet gridArr = []\n\t\tlet nthRow = 0\n\t\tfor (let index = 0; index < lengthPow; index++) {\n\t\t\t// fills one x with y of length\n\t\t\tif(index % length ===0 ){\n\t\t\t\tif(index !== 0){\n\t\t\t\t\t++nthRow\n\t\t\t\t}\n\t\t\t\tgridArr.push([randomArr[index]])\n\t\t\t} else{\n\t\t\t\tgridArr[nthRow].push(randomArr[index])\n\t\t\t}\t\t\t\n\t\t}\n\n\t\tsetGrid(gridArr)\n\t}\n\n\tconst createRandomArray = (intArr, resultArr= [])=>{\n\n\t\tlet randomNum = Math.floor(Math.random() * 100 % intArr.length)\n\t\tresultArr.push(intArr[randomNum])\n\t\tintArr.splice(randomNum, 1)\n\t\t\t\n\t\tif(intArr.length > 0){\n\t\t\treturn createRandomArray(intArr, resultArr)\n\t\t} else{\n\t\t\treturn resultArr\n\t\t}\n\t}\n\n\tconst computeLine = ()=>{\n\t\t\n\t\tlet rowLine = 0\n\t\tlet columnLine = 0\n\t\tlet slashLine = 0\n\n\t\t// calculate row line\n\t\tfor (let x = 0; x < length; x++) {\n\t\t\t\n\t\t\tlet ColumnArr = grid[x].filter(e=> circle[e-1] === 0 )\n\t\t\t// or grid[x].includes(0) === false, line++\n\n\t\t\tif(ColumnArr.length === 0){\n\t\t\t\t++columnLine\n\t\t\t}\t\t\t\n\t\t}\n\t\tconsole.log(columnLine);\n\n\t\t// calculate row line\n\t\tfor (let y = 0; y < length; y++) {\n\t\t\tlet includesZero = false\n\n\t\t\tfor (let x = 0; x < length; x++) {\n\t\t\t\tif (circle[grid[x][y]-1] === 0 ){\n\t\t\t\t\tincludesZero = true\n\t\t\t\t}\t\t\t\t\n\t\t\t}\n\t\t\tif(includesZero === false){\n\t\t\t\t++rowLine\n\t\t\t}\n\t\t}\n\t\tconsole.log(rowLine);\n\n\t\t// calculate slash line\n\t\tlet includesZero = false\n\t\tfor (let x = 0; x < length; x++) {\n\t\t\tif(circle[grid[x][x]-1] === 0 ){\n\t\t\t\tincludesZero = true\n\t\t\t}\n\t\t}\n\t\tif( includesZero === false ){\n\t\t\t++slashLine\n\t\t}\n\t\tconsole.log(slashLine);\n\n\n\t\t// calculate backslash line\n\t\tincludesZero = false\n\t\tfor (let x = 0; x < length; x++) {\n\t\t\t// length has to substract 1\n\t\t\tif(circle[grid[x][length - x -1]-1] === 0 ){\n\t\t\t\tincludesZero = true\n\t\t\t}\n\t\t}\n\t\tif( includesZero === false ){\n\t\t\t++slashLine\n\t\t}\n\t\tconsole.log(slashLine);\n\n\t\tif( rowLine + columnLine + slashLine >= howManyLineIsWin){\n\t\t\tshowWin()\n\t\t}\n\t}\n\n\tconst showWin = ()=>{\n\t\tboundRecordResult({\n\t\t\t...result,\n\t\t\twin: ++result.win\n\t\t})\n\t\tsetIsWin(true)\n\t}\n\n\tconst handleLengthInputChange = e =>{\n\t\tsetLength(e.target.value)\n\t\tif( parseInt(e.target.value) >0 ){\n\t\t\tsetLengthPow( e.target.value* e.target.value )\n\t\t}\n\t}\n\n\tconst handleNumberClick = e =>{\n\t\tsetCircleIndexTrue( parseInt(e.target.value) -1 )\n\t}\n\n\tconst handleSearchInputChange = e =>{\n\t\tsetSearchValue( parseInt(e.target.value) )\n\t\tif( parseInt(e.target.value) === -1 ){\n\t\t\tsetIsEasterEggShow(true)\n\t\t}\n\t}\n\n\tconst handleSearchClick = ()=>{\n\t\tif(searchValue > 0 && searchValue <= lengthPow){\t\t\t\n\t\t\tsetCircleIndexTrue( searchValue -1 )\n\t\t} else {\n\t\t\talert( '請確認輸入數字是否正確')\n\t\t}\n\t}\n\n\tconst setCircleIndexTrue = index => {\n\t\tlet newArr = [ ...circle.slice(0, index), 1, ...circle.slice(index+1) ]\n\t\tsetCircle(newArr)\n\t}\n\n\t// Example: grid = [ [1,1,0,0], [0,0,1,1], [], [] ]\n\t// grid[2] 會顯示當 x 是 2 的時候，y 的資料\n\t// grid[2][1] 會顯示當 x 是 2，y 是 1 的時候的資料\n\n\tconst handleRestartClick =()=>{\n\t\tsetIsWin(false)\n\t\tsetSearchValue(0)\n\n\t\tinitializeCircle()\n\t\tinitializeGrid()\n\t}\n\n\treturn (\n\t\t<div className=\"bingo__container\">\n\t\t\t<div className=\"bingo__main\">\n\t\t\t\t<h1> 賓果遊戲 </h1>\n\t\t\t\t<p> 請直接點選數字圈選或輸入數字圈選 </p>\n\t\t\t\t<p> \b\b連線連成三條即獲勝 </p>\n\t\t\t\t<p style={{fontSize: '.7rem', textAlign:'end', color:'gray'}}>何不試試看負數</p>\n\t\t\t\t<div className=\"search__main\">\n\t\t\t\t\t<input className=\"search__input\" type=\"number\" value={searchValue} onChange={handleSearchInputChange} placeholder={`輸入數字 1~${length*length} 以直接圈選`} />\n\t\t\t\t\t<button className=\"search__button\" onClick={handleSearchClick}>圈選 </button>\n\t\t\t\t</div>\n\n\t\t\t\t{\n\t\t\t\t\tgrid[1] && <BingoBlock \n\t\t\t\t\t\tgrid = {grid}\n\t\t\t\t\t\thandleNumberClick = {handleNumberClick}\n\t\t\t\t\t\tcircle= {circle}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\tisEasterEggShow && <div>\n\t\t\t\t\t\t<span> 賓果大小(x乘x)： </span>\n\t\t\t\t\t\t<input value={length} onChange={handleLengthInputChange} style={{marginTop: '2rem'}} />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t{\n\t\t\t\tisWin && <WinPopUp handleRestartClick = {handleRestartClick} result={result}/>\n\t\t\t}\n\t\t</div>\n\t)\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\nimport { Provider } from 'react-redux';\n\n\nReactDOM.render(<Provider store={store}>\n    <App />\n</Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}